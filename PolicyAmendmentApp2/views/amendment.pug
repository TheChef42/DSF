extends layout

block content
  head
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css")
    style.
      .clear-both {
        clear: both;
  body
    script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js")

    if error
      p.error-message(style="color: red;")= error

    if success
      p.success-message(style="color: green;")= success

    h1 Submit an amendment for the #{selectedPaper}
    div.container.paper
      each paper in papers
        a(href="/amendment/" + paper.name)
          button.large(class=paper.name == selectedPaper ? 'active' : '') #{paper.name}

    if isClosed
      p The amendment process for the paper "#{selectedPaper}" is currently closed.
      img(src="/lukketforæf.png" alt="Closed for ÆF")
    else

      form(action="/submit-amendment" method="POST" onsubmit="return validateForm()")
        label(for="stiller") Stiller:
        input(type="text" name="stiller" value=proposer readonly)

        label(for="linjeFra") Line From:
        input(type="number" name="linjeFra" id="linjeFra" required)

        label(for="linjeTil") Line To:
        input(type="number" name="linjeTil" id="linjeTil" required)

        if mode === 'æf til æf'
          label(for="aef_to_aef") What AM should this AM to AM modify?:
          input(type="text" name="aef_to_aef" required)

        label(for="medstillere") Medstillere:
        select(name="medstillere[]" multiple="multiple" class="select2")
          each org in organisations
            option(value=org.abbreviation)= org.name + ' - ' + org.university + ' (' + org.abbreviation + ')'

        label(for="typeAfÆf") Type af ÆF:
        select(name="typeAfÆf" id="typeAfÆf" required onchange="toggleNyTekstFields()")
          option(value="Tilføj / Add") Tilføj / Add
          option(value="Erstat / Replace") Erstat / Replace
          option(value="Slet / Delete") Slet / Delete
          option(value="Flyt / Move") Flyt / Move

        label(for="oprindeligTekst") Oprindelig tekst:
        textarea(name="oprindeligTekst" required)

        div#nyTekstFields
          label(for="nyTekst") Ny tekst:
          textarea(name="nyTekst")

        label(for="motivationForÆf") Motivation for ÆF:
        textarea(name="motivationForÆf" required)

        label(for="oprindeligTekstEngelsk") Oprindelig tekst (engelsk):
        textarea(name="oprindeligTekstEngelsk")

        div#nyTekstFieldsEng
          label(for="nyTekstEngelsk") Ny tekst (engelsk):
          textarea(name="nyTekstEngelsk")

        label(for="motivationForÆfEngelsk") Motivation for ÆF (engelsk):
        textarea(name="motivationForÆfEngelsk")

        button(type="submit") Submit Amendment

      h1 Upload Amendments via Excel
      form(action="/upload" method="POST" enctype="multipart/form-data" class="upload-form" onsubmit="return validateFile()")
        input(type="file" name="file" id="fileInput" accept=".xls,.xlsx" required)
        button(type="submit" style="margin-right: 10px;") Upload
        a(href="/download-template/danish" style="margin-right: 10px;")
          button(type="button") Download Danish Template
        a(href="/download-template/english")
          button(type="button") Download English Template

      h1 Submitted Amendments
      form(action="/send-amendments" method="POST" class="send-amendments-form")
        button(type="submit" style="margin-right: 10px;") Submit Amendments
        button(type="button" class="button" onclick=`window.location.href='/submitted-amendments/${selectedPaper}'`) Go to Submitted Amendments

      div.clear-both

      h1 Amendments List
      button(type="button" style="background-color: red; color: white; margin-bottom: 10px;" onclick="deleteAllAmendments()") Delete All
      table
        tr
          th ÆF Nummer
          if mode === 'æf til æf'
            th ÆF to ÆF
          th Linje fra
          th Linje til
          th Stiller
          th Medstiller
          th Type af ÆF
          th Oprindelig tekst
          th Ny tekst
          th Motivation for ÆF
          th Actions
        each amendment in amendments
          tr
            td= amendment.amendment_number
            if mode === 'æf til æf'
              td= amendment.amendment_to_amendment
            td= amendment.line_from
            td= amendment.line_to
            td= amendment.proposer
            td= amendment.co_proposer
            td= amendment.amendment_type
            td= amendment.original_text_danish
            td= amendment.new_text_danish
            td= amendment.motivation_danish
            td
              button(type="button" style="background-color: red; color: white; margin-bottom: 10px;" onclick=`deleteAmendment(${amendment.id})`) Delete

          div#overlay(style="display: none;")
            div#fileErrorModal.modal
              div.modal-content
                span.close-button(onclick="closeModal()") &times;
                h2.modal-title Error: Invalid File
                p Please upload a valid .xls or .xlsx file.
                div.modal-buttons
                  a(href="/download-template/danish" target="_blank")
                    button(type="button") Download danish Template
                  a(href="/download-template/english" target="_blank")
                    button(type="button") Download English Template

    script.
      $(document).ready(function () {
        function formatOrg(org) {
          if (!org.id) {
            return org.text;
          }
          const text = $(org.element).text();
          return $('<span>' + text + '</span>');
        }

        function formatOrgSelection(org) {
          return org.id;
        }

        $('.select2').select2({
          templateResult: formatOrg,
          templateSelection: formatOrgSelection
        });
      });

      function deleteAmendment(id) {
        if (confirm('Are you sure you want to delete this amendment?')) {
          fetch(`/amendment/delete/${id}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            }
          })
                  .then(response => {
                    if (response.ok) {
                      location.reload();
                    } else {
                      alert('Error deleting amendment');
                    }
                  })
                  .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting amendment');
                  });
        }
      }

      function validateFile() {
        const fileInput = document.getElementById('fileInput');
        const filePath = fileInput.value;
        const allowedExtensions = /(\.xls|\.xlsx)$/i;

        if (!allowedExtensions.exec(filePath)) {
          document.getElementById('overlay').style.display = 'flex';
          fileInput.value = '';
          return false;
        }
        return true;
      }

      function closeModal() {
        document.getElementById('overlay').style.display = 'none';
      }

      function deleteAllAmendments() {
        if (confirm('Are you sure you want to delete all visible amendments?')) {
          fetch('/amendment/delete-all', {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            }
          })
                  .then(response => {
                    if (response.ok) {
                      location.reload();
                    } else {
                      alert('Error deleting amendments');
                    }
                  })
                  .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting amendments');
                  });
        }
      }

      function validateForm() {
        const linjeFra = document.getElementById('linjeFra').value;
        const linjeTil = document.getElementById('linjeTil').value;

        if (parseInt(linjeFra) >= parseInt(linjeTil)) {
          alert('Line From must be smaller than Line To');
          return false;
        }
        return true;
      }

      function toggleNyTekstFields() {
        const typeAfÆf = document.getElementById('typeAfÆf').value;
        const nyTekstFields = document.getElementById('nyTekstFields');
        const nyTekstFieldsEng = document.getElementById('nyTekstFieldsEng');

        if (typeAfÆf === 'Slet / Delete') {
          nyTekstFields.style.display = 'none';
          nyTekstFieldsEng.style.display = 'none';
        } else {
          nyTekstFields.style.display = 'block';
          nyTekstFieldsEng.style.display = 'block';
        }
      }

      // Initial call to set the correct visibility on page load
      toggleNyTekstFields();